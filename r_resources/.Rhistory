extremoDown = Q1 - 3 * IQR
extremoUp= Q3 + 3 * IQR
estadisticas=c(paste(i,""),Q1,Q3,IQR,levelDown,levelUp,extremoDown,extremoUp)
print(estadisticas)
}
set.seed(0) # para reproducibilidad
clusters.km <- kmeans(myData,3,nstart = 25)
clusters.km$size
data_clus_1 <- myData[clusters.km$cluster == 1,]
data_clus_2 <- myData[clusters.km$cluster == 2,]
data_clus_3 <- myData[clusters.km$cluster == 3,]
fviz_cluster(clusters.km, data = myData, palette = "jco", ggtheme = theme_minimal())
update.packages(c("mlbench","cluster","factoextra","biclust","caret","pheatmap","MASS","grid"))
library(caret)
library(cluster)
library(lattice)
library(ggplot2)
library(factoextra)
library(pheatmap)
library(biclust)
#Pruebas con el dataset SOFT
GDS3502 <-
read.delim("D:/Workspaces/Bioinformatica/GDS3502.soft", row.names = 1)
#View(GDS3502)
#Pruebas con el dataset SOFT
myData = GDS3502[, -1]
myDataColNames = colnames(myData)
myData=GDS3502[,-1]
myData<-scale(myData)
myDataColNames=colnames(myData)
myDataHeaders=rownames(myData)
#Cambio el nombre de Condiciones
nuevasCondiciones=c("c1","c2","c3","c4","c5","c6","c7","c8","c9","c10","c11","c12","c13","c14","c15","c16","c17","c18","c19","c20","c21","c22","c23","c24","c25","c26","c27","c28","c29","c30","c31","c32")
colnames(myData)<-nuevasCondiciones
#Summary
summary(myData)
i=0
for(i in 1:ncol(myData)) {
col <- myData[,i]
resumen=summary(col)
Q1 = resumen[2]
Q3 = resumen[5]
IQR = Q3-Q1
levelDown = Q1-1.5*IQR
levelUp = Q3 + 1.5 * IQR
extremoDown = Q1 - 3 * IQR
extremoUp= Q3 + 3 * IQR
estadisticas=c(paste(i,""),Q1,Q3,IQR,levelDown,levelUp,extremoDown,extremoUp)
print(estadisticas)
}
set.seed(0) # para reproducibilidad
clusters.km <- kmeans(myData,3,nstart = 25)
clusters.km$size
data_clus_1 <- myData[clusters.km$cluster == 1,]
data_clus_2 <- myData[clusters.km$cluster == 2,]
data_clus_3 <- myData[clusters.km$cluster == 3,]
fviz_cluster(clusters.km, data = myData, palette = "jco", ggtheme = theme_minimal())
#Librerias
library(caret)
library(cluster)
library(lattice)
library(ggplot2)
library(factoextra)
library(pheatmap)
library(biclust)
leerFichero <- function(fileName) {
salida <- read.csv(fileName, row.names = 1)
return (salida)
}
exportarImagenes = TRUE
ruta = "D:/Workspaces/R-workspace/Bio/"
files = c("schizophrenia.csv", "control.csv", "bipolar.csv")
fileNames = c("schizophrenia", "control", "bipolar")
datas <- vector('list', 3)
for (i in 1:length(files)) {
name <- paste(ruta, sep = "", files[i])
datas[[i]] <- leerFichero(name)
#Guardamos Mapa de calor
if (exportarImagenes) {
dev = png(paste(fileNames[i], sep = "", "_HeatMap.png"))
drawHeatmap(datas[[i]])
dev.off()
}
}
#for (i in 1:length(datas)) {
for (i in 3:3) {
actualData <- datas[[i]]
#Clustering
set.seed(1996) # para reproducibilidad
clusters.km <- kmeans(actualData, 3, nstart = 25)
clusters.km$size
data_clus_1 <- actualData[clusters.km$cluster == 1,]
data_clus_2 <- actualData[clusters.km$cluster == 2,]
data_clus_3 <- actualData[clusters.km$cluster == 3,]
fviz_cluster(
clusters.km,
data = actualData,
palette = "jco",
ggtheme = theme_minimal()
)
if (exportarImagenes) {
#Pintamos el plot del kmeans
clusName <- paste(fileNames[i], sep = "_", "kmeansPlot.png")
dev = png(clusName)
fviz_cluster(
clusters.km,
data = actualData,
palette = "jco",
ggtheme = theme_minimal()
)
dev.off()
#Pintamos mapas de calor por cluster
headName <- paste(fileNames[i], sep = "", "_HeatMap_clus_")
for (j in 1:length(files)) {
print(colnames(actualData[clusters.km$cluster == j,]))
print("")
name = paste(j, ".png")
#Guardamos Mapa de calor
dev = png(paste(headName, name))
drawHeatmap(actualData[clusters.km$cluster == j,])
dev.off()
}
}
print("-----------------------------------------------------")
}
#Librerias
library(caret)
library(cluster)
library(lattice)
library(ggplot2)
library(factoextra)
library(pheatmap)
library(biclust)
leerFichero <- function(fileName) {
salida <- read.csv(fileName, row.names = 1)
return (salida)
}
exportarImagenes = FALSE
ruta = "D:/Workspaces/R-workspace/Bio/"
files = c("schizophrenia.csv", "control.csv", "bipolar.csv")
fileNames = c("schizophrenia", "control", "bipolar")
datas <- vector('list', 3)
for (i in 1:length(files)) {
name <- paste(ruta, sep = "", files[i])
datas[[i]] <- leerFichero(name)
#Guardamos Mapa de calor
if (exportarImagenes) {
dev = png(paste(fileNames[i], sep = "", "_HeatMap.png"))
drawHeatmap(datas[[i]])
dev.off()
}
}
#for (i in 1:length(datas)) {
for (i in 3:3) {
actualData <- datas[[i]]
#Clustering
set.seed(1996) # para reproducibilidad
clusters.km <- kmeans(actualData, 3, nstart = 25)
clusters.km$size
data_clus_1 <- actualData[clusters.km$cluster == 1,]
data_clus_2 <- actualData[clusters.km$cluster == 2,]
data_clus_3 <- actualData[clusters.km$cluster == 3,]
fviz_cluster(
clusters.km,
data = actualData,
palette = "jco",
ggtheme = theme_minimal()
)
if (exportarImagenes) {
#Pintamos el plot del kmeans
clusName <- paste(fileNames[i], sep = "_", "kmeansPlot.png")
dev = png(clusName)
fviz_cluster(
clusters.km,
data = actualData,
palette = "jco",
ggtheme = theme_minimal()
)
dev.off()
#Pintamos mapas de calor por cluster
headName <- paste(fileNames[i], sep = "", "_HeatMap_clus_")
for (j in 1:length(files)) {
print(colnames(actualData[clusters.km$cluster == j,]))
print("")
name = paste(j, ".png")
#Guardamos Mapa de calor
dev = png(paste(headName, name))
drawHeatmap(actualData[clusters.km$cluster == j,])
dev.off()
}
}
print("-----------------------------------------------------")
}
#Librerias
library(caret)
library(cluster)
library(lattice)
library(ggplot2)
library(factoextra)
library(pheatmap)
library(biclust)
leerFichero <- function(fileName) {
salida <- read.csv(fileName, row.names = 1)
return (salida)
}
exportarImagenes = FALSE
ruta = "D:/Workspaces/R-workspace/Bio/"
files = c("schizophrenia.csv", "control.csv", "bipolar.csv")
fileNames = c("schizophrenia", "control", "bipolar")
datas <- vector('list', 3)
for (i in 1:length(files)) {
name <- paste(ruta, sep = "", files[i])
datas[[i]] <- leerFichero(name)
#Guardamos Mapa de calor
if (exportarImagenes) {
dev = png(paste(fileNames[i], sep = "", "_HeatMap.png"))
drawHeatmap(datas[[i]])
dev.off()
}
}
#Librerias
library(caret)
library(cluster)
library(lattice)
library(ggplot2)
library(factoextra)
library(pheatmap)
library(biclust)
leerFichero <- function(fileName) {
salida <- read.csv(fileName, row.names = 1)
return (salida)
}
exportarImagenes = FALSE
ruta = "D:/Workspaces/R-workspace/Bio/"
files = c("schizophrenia.csv", "control.csv", "bipolar.csv")
fileNames = c("schizophrenia", "control", "bipolar")
datas <- vector('list', 3)
for (i in 1:length(files)) {
name <- paste(ruta, sep = "", files[i])
datas[[i]] <- leerFichero(name)
#Guardamos Mapa de calor
if (exportarImagenes) {
dev = png(paste(fileNames[i], sep = "", "_HeatMap.png"))
drawHeatmap(datas[[i]])
dev.off()
}
}
#for (i in 1:length(datas)) {
for (i in 1:3) {
actualData <- datas[[i]]
#Clustering
set.seed(1996) # para reproducibilidad
clusters.km <- kmeans(actualData, 3, nstart = 25)
clusters.km$size
data_clus_1 <- actualData[clusters.km$cluster == 1,]
data_clus_2 <- actualData[clusters.km$cluster == 2,]
data_clus_3 <- actualData[clusters.km$cluster == 3,]
fviz_cluster(
clusters.km,
data = actualData,
palette = "jco",
ggtheme = theme_minimal()
)
if (exportarImagenes) {
#Pintamos el plot del kmeans
clusName <- paste(fileNames[i], sep = "_", "kmeansPlot.png")
dev = png(clusName)
fviz_cluster(
clusters.km,
data = actualData,
palette = "jco",
ggtheme = theme_minimal()
)
dev.off()
#Pintamos mapas de calor por cluster
headName <- paste(fileNames[i], sep = "", "_HeatMap_clus_")
for (j in 1:length(files)) {
print(colnames(actualData[clusters.km$cluster == j,]))
print("")
name = paste(j, ".png")
#Guardamos Mapa de calor
dev = png(paste(headName, name))
drawHeatmap(actualData[clusters.km$cluster == j,])
dev.off()
}
}
print("-----------------------------------------------------")
}
library(caret)
library(cluster)
library(lattice)
library(ggplot2)
library(factoextra)
library(pheatmap)
library(biclust)
leerFichero <- function(fileName) {
salida <- read.csv(fileName, row.names = 1)
return (salida)
}
exportarImagenes = FALSE
ruta = "D:/Workspaces/R-workspace/Bio/"
files = c("schizophrenia.csv", "control.csv", "bipolar.csv")
fileNames = c("schizophrenia", "control", "bipolar")
datas <- vector('list', 3)
for (i in 1:length(files)) {
name <- paste(ruta, sep = "", files[i])
datas[[i]] <- leerFichero(name)
#Guardamos Mapa de calor
if (exportarImagenes) {
dev = png(paste(fileNames[i], sep = "", "_HeatMap.png"))
drawHeatmap(datas[[i]])
dev.off()
}
}
#for (i in 1:length(datas)) {
i=1
actualData <- datas[[i]]
#Clustering
set.seed(1996) # para reproducibilidad
clusters.km <- kmeans(actualData, 3, nstart = 25)
clusters.km$size
data_clus_1 <- actualData[clusters.km$cluster == 1,]
data_clus_2 <- actualData[clusters.km$cluster == 2,]
data_clus_3 <- actualData[clusters.km$cluster == 3,]
fviz_cluster(
clusters.km,
data = actualData,
palette = "jco",
ggtheme = theme_minimal()
)
#for (i in 1:length(datas)) {
i=2
actualData <- datas[[i]]
#Clustering
set.seed(1996) # para reproducibilidad
clusters.km <- kmeans(actualData, 3, nstart = 25)
clusters.km$size
data_clus_1 <- actualData[clusters.km$cluster == 1,]
data_clus_2 <- actualData[clusters.km$cluster == 2,]
data_clus_3 <- actualData[clusters.km$cluster == 3,]
fviz_cluster(
clusters.km,
data = actualData,
palette = "jco",
ggtheme = theme_minimal()
)
#for (i in 1:length(datas)) {
i=3
actualData <- datas[[i]]
#Clustering
set.seed(1996) # para reproducibilidad
clusters.km <- kmeans(actualData, 3, nstart = 25)
clusters.km$size
data_clus_1 <- actualData[clusters.km$cluster == 1,]
data_clus_2 <- actualData[clusters.km$cluster == 2,]
data_clus_3 <- actualData[clusters.km$cluster == 3,]
fviz_cluster(
clusters.km,
data = actualData,
palette = "jco",
ggtheme = theme_minimal()
)
update.packages(c("mlbench","cluster","factoextra","biclust","caret","pheatmap","MASS","grid"))
library(caret)
library(cluster)
library(lattice)
library(ggplot2)
library(factoextra)
library(pheatmap)
library(biclust)
#Pruebas con el dataset SOFT
GDS3502 <-
read.delim("D:/Workspaces/Bioinformatica/GDS3502.soft", row.names = 1)
#View(GDS3502)
#Pruebas con el dataset SOFT
myData = GDS3502[, -1]
myDataColNames = colnames(myData)
myData=GDS3502[,-1]
myData<-scale(myData)
myDataColNames=colnames(myData)
myDataHeaders=rownames(myData)
#Cambio el nombre de Condiciones
nuevasCondiciones=c("c1","c2","c3","c4","c5","c6","c7","c8","c9","c10","c11","c12","c13","c14","c15","c16","c17","c18","c19","c20","c21","c22","c23","c24","c25","c26","c27","c28","c29","c30","c31","c32")
colnames(myData)<-nuevasCondiciones
#Summary
summary(myData)
i=0
for(i in 1:ncol(myData)) {
col <- myData[,i]
resumen=summary(col)
Q1 = resumen[2]
Q3 = resumen[5]
IQR = Q3-Q1
levelDown = Q1-1.5*IQR
levelUp = Q3 + 1.5 * IQR
extremoDown = Q1 - 3 * IQR
extremoUp= Q3 + 3 * IQR
estadisticas=c(paste(i,""),Q1,Q3,IQR,levelDown,levelUp,extremoDown,extremoUp)
print(estadisticas)
}
set.seed(0) # para reproducibilidad
clusters.km <- kmeans(myData,3,nstart = 25)
clusters.km$size
data_clus_1 <- myData[clusters.km$cluster == 1,]
data_clus_2 <- myData[clusters.km$cluster == 2,]
data_clus_3 <- myData[clusters.km$cluster == 3,]
fviz_cluster(clusters.km, data = myData, palette = "jco", ggtheme = theme_minimal())
GDS3502 <-
read.delim("D:/Workspaces/Bioinformatica/GDS3502.soft", row.names = 1)
View(GDS3502)
install.packages(c("fclust", "ppclust"))
#fanny(clientefamPrep, numCluster, metric = "euclidean", stand = FALSE) Es CMEANS? Preguntar MIGUEL
res.fcm <- fcm(clientefamPrep, centers=5)
#Cargamos las librerias
library(cluster)
library(ggplot2)
library(pheatmap)
library(caret)
library(lattice)
library(factoextra)
library(MASS)
library(dplyr)
library(corrplot)   #Para pintar matriz de correlacion
require(ppclust)
require(fclust)
#Leemos los datos
dataClienteFamilia <- read.csv("../files/similarityMatrix/dataGastoClienteFamilia.csv", row.names=1, na.strings="0")
#Copiamos los datos
clientefam=dataClienteFamilia[,]
#Summary
#summary(clientefam)
####  Preprocesamiento  ####
#Quitamos NA y ponemos 0
clientefam[is.na(clientefam)] <- 0
#Quitar filas que sumen 0
clientefamPrep=clientefam[which(rowSums(clientefam)!=0),]
#Quitar columnas que sumen 0
clientefamPrep=clientefamPrep[, which(colSums(clientefamPrep)!=0)]
##Estandarizacion
#Center TRUE resta la media - Scale TRUE divide por des. tip.
clientefamPrep<-scale(clientefamPrep, center = TRUE, scale = TRUE)
#Pasamos a dataFrame
clientefamPrep<-as.data.frame(clientefamPrep)
#### Clustering ####
#Muestreo Aleatorio
muestreo <- sample_n(clientefamPrep, size= 250)
#Determinar numero de clusters en base al muestreo
fviz_nbclust(muestreo, kmeans,method = "gap_stat")
#Seteamos la semilla
set.seed(1996) # para reproducibilidad
#Clustering Difuso
numCluster=5
#fanny(clientefamPrep, numCluster, metric = "euclidean", stand = FALSE) Es CMEANS? Preguntar MIGUEL
res.fcm <- fcm(clientefamPrep, centers=5)
#Cargamos las librerias
library(cluster)
library(ggplot2)
library(pheatmap)
library(caret)
library(lattice)
library(factoextra)
library(MASS)
library(dplyr)
library(corrplot)   #Para pintar matriz de correlacion
require(ppclust)
require(fclust)
#Leemos los datos
dataClienteFamilia <- read.csv("../files/similarityMatrix/dataGastoClienteFamilia.csv", row.names=1, na.strings="0")
#Copiamos los datos
clientefam=dataClienteFamilia[,]
setwd("D:/Workspaces/eclipse-workspace/TFG/RecommenderSystem/r_resources")
#Leemos los datos
dataClienteFamilia <- read.csv("../files/similarityMatrix/dataGastoClienteFamilia.csv", row.names=1, na.strings="0")
#Copiamos los datos
clientefam=dataClienteFamilia[,]
#Summary
#summary(clientefam)
####  Preprocesamiento  ####
#Quitamos NA y ponemos 0
clientefam[is.na(clientefam)] <- 0
#Quitar filas que sumen 0
clientefamPrep=clientefam[which(rowSums(clientefam)!=0),]
#Quitar columnas que sumen 0
clientefamPrep=clientefamPrep[, which(colSums(clientefamPrep)!=0)]
##Estandarizacion
#Center TRUE resta la media - Scale TRUE divide por des. tip.
clientefamPrep<-scale(clientefamPrep, center = TRUE, scale = TRUE)
#Pasamos a dataFrame
clientefamPrep<-as.data.frame(clientefamPrep)
#### Clustering ####
#Muestreo Aleatorio
muestreo <- sample_n(clientefamPrep, size= 250)
#Seteamos la semilla
set.seed(1996) # para reproducibilidad
#Clustering Difuso
numCluster=5
#fanny(clientefamPrep, numCluster, metric = "euclidean", stand = FALSE) Es CMEANS? Preguntar MIGUEL
res.fcm <- fcm(clientefamPrep, centers=5)
summary(res.fcm)
summary(res.fcm)
plotcluster(res.fcm, cp=1, trans=TRUE)
cluster::clusplot(scale(x), res.fcm3$cluster,
main = "Cluster plot of Iris data set",
color=TRUE, labels = 2, lines = 2, cex=1)
res.fcm3 <- ppclust2(res.fcm, "fanny")
cluster::clusplot(scale(x), res.fcm3$cluster,
main = "Cluster plot of Iris data set",
color=TRUE, labels = 2, lines = 2, cex=1)
res.fcm3 <- ppclust2(res.fcm, "fanny")
cluster::clusplot(scale(clientefamPrep), res.fcm3$cluster,
main = "Cluster plot of Iris data set",
color=TRUE, labels = 2, lines = 2, cex=1)
